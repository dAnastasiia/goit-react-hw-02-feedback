{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/App/App.js","index.js"],"names":["Section","this","props","title","children","className","Component","FeedbackOptions","options","onLeaveFeedback","map","name","type","onClick","Notification","state","visible","message","Statistics","good","neutral","bad","total","positivePercentage","App","handleButtonClick","e","a","target","setState","prevState","countTotalFeedback","Object","values","reduce","value","countPositiveFeedbackPercentage","percentage","Math","round","positive","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAsBeA,E,4JAZb,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,sBAAKC,UAAU,UAAf,UACE,mBAAGA,UAAU,iBAAb,SAA+BF,IAC/B,8BAAMC,W,GAZQE,aCuBPC,G,kKAjBb,WAAU,IAAD,EAC8BN,KAAKC,MAAlCM,EADD,EACCA,QAASC,EADV,EACUA,gBAEjB,OAAOD,EAAQE,KAAI,SAAAC,GAAI,OACrB,wBACEC,KAAK,SACLP,UAAU,SACVM,KAAMA,EACNE,QAASJ,EAJX,SAOGE,GAFIA,U,GAfiBL,cCefQ,G,kNAVbC,MAAQ,CACNC,SAAS,G,4CAGX,WAAU,IACAC,EAAYhB,KAAKC,MAAjBe,QACR,OAAO,mBAAGZ,UAAU,eAAb,SAA6BY,Q,GAXbX,cC2BZY,G,kKAlBb,WAAU,IAAD,EACmDjB,KAAKC,MAAvDiB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBAEnC,OACE,sBAAKlB,UAAU,aAAf,UACE,oBAAGA,UAAU,mBAAb,mBAAuCc,KACvC,oBAAGd,UAAU,mBAAb,sBAA0Ce,KAC1C,oBAAGf,UAAU,mBAAb,kBAAsCgB,KAEtC,oBAAGhB,UAAU,mBAAb,oBAAwCiB,KACxC,oBAAGjB,UAAU,mBAAb,gCACsBkB,EADtB,c,GAnBiBjB,cCuEVkB,E,4MApEbT,MAAQ,CACNI,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,kBAAoB,SAAAC,GAClB,IAAMC,EAAID,EAAEE,OAAOjB,KAEnB,EAAKkB,UAAS,SAAAC,GAAS,sBACpBH,EAAIG,EAAUH,GAAK,O,EAIxBI,mBAAqB,WAGnB,OAFeC,OAAOC,OAAO,EAAKlB,OAEpBmB,QAAO,SAACZ,EAAOa,GAE3B,OADAb,GAASa,IAER,I,EAGLC,gCAAkC,WAChC,IAAIC,EAAa,EACXlB,EAAO,EAAKJ,MAAMI,KAClBG,EAAQ,EAAKS,qBAMnB,OAJc,IAAVT,IACFe,EAAaC,KAAKC,MAAOpB,EAAOG,EAAS,MAGpCe,G,4CAGT,WAAU,IAAD,EACwBpC,KAAKc,MAA5BI,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQrB,KAAK8B,qBACbS,EAAWvC,KAAKmC,kCAEtB,OACE,qCACE,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAASwB,OAAOS,KAAKxC,KAAKc,OAC1BN,gBAAiBR,KAAKwB,sBAI1B,cAAC,EAAD,CAAStB,MAAM,aAAf,SACa,IAAVmB,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBiB,a,GA5DhBlC,a,YCElBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f6dce892.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\nclass Section extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { title, children } = this.props;\r\n\r\n    return (\r\n      <div className=\"Section\">\r\n        <p className=\"Section__title\">{title}</p>\r\n        <div>{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.scss';\r\n\r\nclass FeedbackOptions extends Component {\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { options, onLeaveFeedback } = this.props;\r\n\r\n    return options.map(name => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        name={name}\r\n        onClick={onLeaveFeedback}\r\n        key={name}\r\n      >\r\n        {name}\r\n      </button>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Notification.scss';\r\n\r\nclass Notification extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    visible: true,\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n    return <p className=\"Notification\">{message}</p>;\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.scss';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n\r\n    return (\r\n      <div className=\"Statistics\">\r\n        <p className=\"Statistics__item\">Good: {good}</p>\r\n        <p className=\"Statistics__item\">Neutral: {neutral}</p>\r\n        <p className=\"Statistics__item\">Bad: {bad}</p>\r\n\r\n        <p className=\"Statistics__item\">Total: {total}</p>\r\n        <p className=\"Statistics__item\">\r\n          Positive feedback: {positivePercentage}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport Section from '../Section';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Notification from '../Notification';\r\nimport Statistics from '../Statistics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleButtonClick = e => {\r\n    const a = e.target.name;\r\n\r\n    this.setState(prevState => ({\r\n      [a]: prevState[a] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const values = Object.values(this.state);\r\n\r\n    return values.reduce((total, value) => {\r\n      total += value;\r\n      return total;\r\n    }, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let percentage = 0;\r\n    const good = this.state.good;\r\n    const total = this.countTotalFeedback();\r\n\r\n    if (total !== 0) {\r\n      percentage = Math.round((good / total) * 100);\r\n    }\r\n\r\n    return percentage;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const total = this.countTotalFeedback();\r\n    const positive = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleButtonClick}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positive}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}